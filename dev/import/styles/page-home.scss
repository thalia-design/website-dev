@use 'utils' as *;

.section-home-head {
    overflow: hidden;
    background-color: var(--thalia-c-bg2);

    .titles {
        @include dflex();
        padding-top: 4rem;

        > wrapper {
            display: flex;
            flex-direction: column;
            width: auto;
            gap: 1.25em;
            font-size: 2rem;
            transform: translateY(3vw);
        }

        h1 {
            font-size: 22vw;
            line-height: 0.7;
            font-family: "Bricolage Grotesque", sans-serif;
            font-variation-settings:
                "wdth" 100,
                "wght" 400,
                "opsz" 96;
            letter-spacing: -3%;
            user-select: none;
            pointer-events: none;
        }

        h2 {
            font-size: 1.25em;
        }
    }

    .decorations {
        @include dflex($j: flex-end);

        .socials {
            @include dflex($d: row);
            gap: 2.4em;
            width: auto;
            margin-bottom: 1.5em;

            .social-btn {
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                font-size: 1em;
                font-weight: 475;
                user-select: none;

                &:not(:first-child):not(:last-child) {
                    margin-bottom: 1.2em;
                }

                > div:first-child {
                    size: 2.75em;
                    margin-bottom: 0.5em;
                    @include usn;

                    transition: transform 0.15s ease-out;
                }

                & {
                    transform: scale(1);
                    transition: transform 0.3s cubic-bezier(0.3, 0, 0.2, 1);
                }

                &:hover {
                    transform: scale(1.05);
                    transition: transform 0.2s cubic-bezier(0.3, 0, 0.1, 1);

                    > div:first-child {
                        transform: translateY(-5%);
                        transition: transform var(--thalia-tr-jump);
                    }
                }

                &:active {
                    > div:first-child {
                        transform: translateY(2%);
                        transition: transform 0.05s ease;
                    }
                }
            }
        }
    }
}
.section-home-head > wrapper,
.chara-thalia--hands .move {
    display: grid;
    grid-template-columns: 60% 1fr;
    padding: _ 5em;
    height: auto;
}

:root {
    --thalia-chara-width: 23vw;
    --thalia-chara-hand-width: 5vw;
    --thalia-chara-hands-spacing: 9vw;
    --thalia-chara-stroke-width: 5;
    --thalia-chara-drag-hands-strength: 0.65;
    --thalia-chara-drag-direction: 1;
}
svg.thalia-chara {
    .tc- {
        &f, &fs {
            fill: var(--thalia-c-bg2);
        }
        &ff, &ffs {
            fill: var(--thalia-c-accent);
        }
        &s, &fs, &ffs {
            stroke: var(--thalia-c-accent);
            stroke-width: var(--thalia-chara-stroke-width);
            stroke-linecap: round;
            stroke-linejoin: round;
            stroke-miterlimit: 10;
        }
        &f, &ff {
            stroke: none;
        }
        &s {
            fill: none;
        }
    }

    g[data-name="blush"] {
        fill: var(--thalia-c-orange);
        mix-blend-mode: darken;
    }

    *[class*="state--"] {
        opacity: 0;
    }
    html[thalia-chara-state="resting"] & {
        .state--resting {
            opacity: 1;
        }
    }
    html[thalia-chara-state="grabbing"] & {
        .state--grabbing {
            opacity: 1;
        }
    }

    & {
        --pointer-follow-look-x: 0px;
        --pointer-follow-look-y: 0px;
        --pointer-follow-look-x2: calc(var(--pointer-follow-look-x) / 2.5);
        --pointer-follow-look-y2: calc(var(--pointer-follow-look-y) / 2.5);
    }

    .eye-follow,
    .face-follow {
        transform: rotateX(0.01deg) translate3d(0, 0, 0);
        transition: transform 0.5s cubic-bezier(0.3, 0, 0.2, 1);
    }
    html[thalia-chara-state="resting"] &.looking {
        .eye-follow,
        .face-follow {
            transition: transform 0.09s ease;
        }
        .eye-follow {
            transform: rotateX(0.01deg) translate3d(var(--pointer-follow-look-x), var(--pointer-follow-look-y), 0);
        }
        .face-follow {
            transform: rotateX(0.01deg) translate3d(var(--pointer-follow-look-x2), var(--pointer-follow-look-y2), 0);
        }
    }

    .state--resting g[data-name="sourcils"] {
        transform: rotateX(0.01deg) translate3d(0, 1%, 0);
        transition: transform 0.45s 0.05s cubic-bezier(0.7, 0, 0.1, 0.9);
        > * {
            transform-origin: center;
            transition: transform 0.15s ease-out;
            > [data-name="L"] { transform-origin: right bottom; }
            > [data-name="R"] { transform-origin: left bottom; }
        }
    }
    &.looking {
        .state--resting g[data-name="sourcils"] {
            transform: rotateX(0.01deg) translate3d(0, -1.5%, 0);
            transition: transform 0.165s ease;
        }
    }
    &.looking:hover,
    html[thalia-social-hover="true"] &.looking {
        .state--resting g[data-name="sourcils"] {
            > [data-name="L"] { transform: rotateZ(8deg) translate3d(1%, -5%, 0); }
            > [data-name="R"] { transform: rotateZ(-8deg) translate3d(-1%, -5%, 0); }
        }
    }

    .state--grabbing g[data-name="eyes"] {
        transform-origin: bottom;
        transform: rotateX(0.01deg) scaleX(0.95) scaleY(1.3);
        transition: transform 0s linear;
    }
    .state--resting g[data-name="eyes"] {
        transform-origin: center 80%;
        transform: rotateX(0.01deg) scale(1);
        transition: transform 0.7s cubic-bezier(0.6, 0, 0, 1);
    }
    .state--grabbing g[data-name="sourcils"] {
        transform: rotateX(0.01deg) translate3d(0, -14%, 0);
        transition: transform 0s linear;
    }
    g[data-name="blush"] > * {
        transform: rotateX(0.01deg) translate3d(0, 0, 0);
        transition: transform 0.2s ease;
    }
    html[thalia-chara-state="grabbing"] & {
        .state--grabbing g[data-name="eyes"] {
            transform: rotateX(0.01deg) scale(1);
            transition: transform 0.3s cubic-bezier(0.2, 0.2, 0, 1);
        }
        .state--resting g[data-name="eyes"] {
            transform: rotateX(0.01deg) scaleY(1.3);
            transition: transform 0s linear;
        }
        .state--grabbing g[data-name="sourcils"] {
            transform: rotateX(0.01deg) translate3d(0, 0, 0);
            transition: transform 0.2s ease;
        }
        .state--resting g[data-name="sourcils"] {
            transform: rotateX(0.01deg) translate3d(0, 6%, 0);
        }
        g[data-name="blush"] {
            > [data-name="L"] { transform: rotateX(0.01deg) translate3d(-2.5%, 0, 0); }
            > [data-name="R"] { transform: rotateX(0.01deg) translate3d(2.5%, 0, 0); }
        }
        /*[data-name="hair-front"] {
            transform: translate3d(calc(var(--thalia-chara-drag-x) * -0.05), 0, 0);
        }*/
    }

    [data-name="hair-front"] {
        transform-origin: center 30%;
        animation: none;
    }
    html[thalia-chara-drag-strength="strong"]:not([thalia-chara-state="grabbing"]) & {
        [data-name="hair-front"] {
            animation: thalia-chara-hair-front-bounce--strong 0.9s cubic-bezier(0.5, 0, 0, 0.9);
        }
    }
    html[thalia-chara-drag-strength="weak"]:not([thalia-chara-state="grabbing"]) & {
        [data-name="hair-front"] {
            animation: thalia-chara-hair-front-bounce--weak 0.9s cubic-bezier(0.3, 0.3, 0, 0.9);
        }
    }
}

@keyframes thalia-chara-hair-front-bounce--strong {
    0% { transform: rotateZ(calc(0deg * var(--thalia-chara-drag-direction))); }
    20% { transform: rotateZ(calc(-12deg * var(--thalia-chara-drag-direction))); }
    50% { transform: rotateZ(calc(4deg * var(--thalia-chara-drag-direction))); }
    100% { transform: rotateZ(calc(0deg * var(--thalia-chara-drag-direction))); }
}
@keyframes thalia-chara-hair-front-bounce--weak {
    0% { transform: rotateZ(calc(0deg * var(--thalia-chara-drag-direction))); }
    15% { transform: rotateZ(calc(-4deg * var(--thalia-chara-drag-direction))); }
    30% { transform: rotateZ(calc(3deg * var(--thalia-chara-drag-direction))); }
    100% { transform: rotateZ(calc(0deg * var(--thalia-chara-drag-direction))); }
}


.interactive-chara-thalia {
    width: 100%;
    max-width: var(--thalia-chara-width);
    @include usn;

    svg g {
        pointer-events: all !important;
        cursor: grab;
    }

    svg.thalia-chara {
        transition: transform 0.5s cubic-bezier(0.3, 0, 0, 1);

        > g {
            transition: transform 0.3s cubic-bezier(0.2, 0.3, 0, 1);
        }
        html[thalia-chara-state="grabbing"] & {

            transform: rotateZ(var(--thalia-chara-drag-rotate)) translate3d(var(--thalia-chara-drag-x), var(--thalia-chara-drag-y), 0);
            & > g {
                transform: rotateX(0.01deg) translate3d(0, 8%, 0);
            }
        }
    }
}
html[thalia-chara-state="grabbing"] * {
    cursor: grabbing !important;
}

.interactive-chara-thalia svg.thalia-chara,
.chara-thalia--hands .move {
    transform: translate3d(0, 0, 0);

    svg > g {
        transition: transform 0.3s cubic-bezier(0.2, 0.3, 0, 1);
    }
    html[thalia-chara-state="grabbing"] & {
        transition: transform 0s ease;
        & svg > g {
            transform: rotateX(0.01deg) translate3d(0, 3.5%, 0);
        }
    }
}
html[thalia-social-hover="true"]:not([thalia-chara-state="grabbing"]) .interactive-chara-thalia svg.thalia-chara.looking > g {
    transition: transform 0.4s cubic-bezier(0.2, 0.4, 0, 0.9);
    transform: rotateX(0.01deg) translate3d(0, -3.5%, 0);

    [data-name="bouche"] { transform: translateY(3%); }
}
[data-name="bouche"] { transition: 0.1s linear; }

.chara-thalia--hands {
    z-index: 1000;
    position: absolute;
    top: 0;
    width: 100%;
    height: 0;
    @include usn;

    > wrapper {
        transform: translateY(-48%);
        overflow: hidden;
        padding: 8% _;
        max-width: 100vw;
    }

    .move {
        transition: transform 0.65s cubic-bezier(0.4, 0.05, 0, 1);

        html[thalia-chara-state="grabbing"] & {
            transform: translate3d(calc(var(--thalia-chara-drag-x) * var(--thalia-chara-drag-hands-strength)), 0, 0);
        }
    }

    .move > wrapper {
        @include dflex($d: row);
        gap: var(--thalia-chara-hands-spacing);
    }

    svg.thalia-chara {
        --thalia-chara-stroke-width: 4;
        width: var(--thalia-chara-hand-width);

        g {
            pointer-events: all !important;
            cursor: pointer;
        }

        & {
            transform-origin: center 7.5%;
            transform: rotateX(0.01deg);
            transition: 0.15s ease;
        }

        &:active {
            transform: scaleX(0.98) scaleY(0.95);
            transition: 0.075s cubic-bezier(0, 0.3, 0.5, 3);
        }
    }
}


.section-home-gallery {
    padding-top: 1em;
    background-color: var(--thalia-c-bg);

    &::before {
        content: "";
        z-index: -1;
        position: absolute;
        top: 0;
        left: 0;
        transform: translateY(-100%);
        width: 100%;
        height: 5em;
        background: linear-gradient(to top, #404CFF, ease-out, transparent);
        opacity: 0.25;
        @include usn;
    }

    .gallery-grid {
        min-height: 100vh;
    }
}

.gallery-grid {
    --ggrid-padding: 4em;
    --ggrid-gap: 0.65em;
    --ggrid-col-nb: 4;
    --ggrid-col-size: calc(((100vw - var(--scrollbar-width) - 4px) - (var(--ggrid-padding) * 2)) / var(--ggrid-col-nb));

    overflow: hidden;
    padding: var(--ggrid-padding);
    padding-bottom: 12em;

    > .grid-muuri {
        transition: height 0.7s cubic-bezier(0.7, 0, 0.2, 1);
    }

    .item-gallery {
        --ggrid-item-size-x: 1;
        --ggrid-item-size-y: 1;
        font-size: 1em;
        border-radius: 1em;
        position: relative;
        max-width: calc(var(--ggrid-col-size) * var(--ggrid-item-size-x) - (var(--ggrid-gap) * 2));

        user-select: none;

        .thumbnail,
        .filters > span,
        .title {
            pointer-events: all !important;
            cursor: pointer;
        }

        & > * {
            position: relative;
            width: 100%;
            max-width: 100%;
        }

        .thumbnail {
            width: calc(var(--ggrid-col-size) * var(--ggrid-item-size-x));
            height: calc(var(--ggrid-col-size) * var(--ggrid-item-size-y));
            font-size: 1em;

            > wrapper {
                height: 100%;
                overflow: hidden;
                border-radius: 1em;
            }

            img {
                size: 100%;
                object-fit: cover;
            }
        }

        .filters {
            @include dflex($d: row, $j: flex-start);
            gap: 0.4em;
            font-size: 0.8em;
            font-weight: 500;
            padding: 0.85em _ 0.5em;

            span {
                padding: 0.3em 0.7em;
                border: 2px solid var(--thalia-c-accent);
                border-radius: 9em;
                text-wrap: nowrap;
                text-overflow: ellipsis;
                overflow: hidden;

                &.placeholder {
                    opacity: 0;
                }
            }
        }

        .title {
            font-size: 1.2em;
            font-weight: 600;
            letter-spacing: 0.5%;
            text-wrap: pretty;
            transform: translateY(0);
            width: auto;
        }

        & {
            @include dflex($a: flex-start, $j: flex-start);
        }
        .title { order: 3; }

        .thumbnail > wrapper {
            transition: transform 0.4s cubic-bezier(0.4, 0, 0, 0.8);
        }
        .thumbnail:hover > wrapper,
        .title:hover ~ .thumbnail > wrapper {
            transform: translateY(-0.25em);
            transition: transform var(--thalia-tr-jump);
        }
        .thumbnail:active > wrapper,
        .title:active ~ .thumbnail > wrapper {
            transform: translateY(0.075em);
            transition: transform 0.05s ease;
        }
    }

    .grid-muuri--item {
        box-sizing: border-box;
        padding: var(--ggrid-gap);
        margin-bottom: 6em;

        // shift
        &.item-shift {
            box-sizing: content-box;

            .item-gallery {
                transition-duration: 0.4s;
                transition-timing-function: cubic-bezier(0.5, 0.1, 0.1, 1);
                transition-property: transform;

                html[thalia-gallery-filter="false"] & {
                    transform: translateY(var(--thalia-gallery-item-shift, 0px));
                }
                html:not([thalia-gallery-filter="false"]) & {
                    transform: translateY(0);
                }
            }
            html:not([thalia-gallery-filter="false"])[thalia-gallery-filter-previous="false"] &.muuri-item-hidden .item-gallery {
                transform: translateY(var(--thalia-gallery-item-shift, 0px));
            }
        }
    }
}

.sticky-filters {
    z-index: 999;
    position: sticky;
    top: 0;
    margin: 0 auto;
    width: fit-content;
    padding: 0.65em;

    > wrapper {
        @include dflex($d: row);
        width: auto;

        padding: 0.75em 1em;
        border-radius: 99em;
        background-color: rgba(var(--thalia-rgb-accent), 1);
        backdrop-filter: blur(15px);

        transition: background-color 0.4s ease;

        html[data-sticky-filters="true"] & {
            background-color: rgba(var(--thalia-rgb-accent), 0.8);
        }

        > *:not(:first-child) {
            margin-left: 1em;
        }
    }
    &.is-scroll-hit {
        > wrapper {
            background-color: rgba(var(--thalia-rgb-accent), 0.8);
        }
    }

    .btn-filter {
        padding: 0.5em 1em;
        border-radius: 99em;
        border: 2px solid rgba(var(--thalia-rgb-bg), 0.15);
        color: var(--thalia-c-beige);
        user-select: none;
        cursor: pointer;

        > span {
            line-height: 1;
        }
    }

    > wrapper .btn-filter-clear {
        @include dflex;
        width: auto;
        height: 0;
        margin: _ 0;
        cursor: pointer;
        pointer-events: none;

        svg {
            box-sizing: content-box;
            size: 0;
            padding: 0;
            fill: none;
            stroke: var(--thalia-c-beige);
            stroke-width: 8px;
            stroke-linecap: round;
        }
    }
    > wrapper .btn-filter.active ~ .btn-filter-clear {
        pointer-events: all;
        margin-left: 1em;
        margin-right: 0.5em;

        transform: rotateZ(0deg) scale(1);
        transition: margin 0.6s cubic-bezier(0.6, 0, 0, 0.975),
                    opacity 0.4s ease,
                    transform 0.4s cubic-bezier(0.2, 0, 0, 0.9);

        svg {
            padding: 0.5em;
            size: 1em;
            opacity: 1;
        }
    }
    > wrapper .btn-filter ~ .btn-filter-clear {
        transform: rotateZ(-90deg) scale(0.8);
        transition: margin 0.6s cubic-bezier(0.6, 0, 0, 0.975),
                    opacity 0.4s ease,
                    transform 0.6s cubic-bezier(0.2, 0, 0, 0.9);
        &:hover {
            opacity: 0.75;
            transform: rotateZ(0.03deg) scale(1.135);
            transition: margin 0.4s ease,
                        opacity 0.4s ease,
                        transform 0.4s cubic-bezier(0.2, 0.8, 0, 0.8);
        }
        &:active {
            opacity: 0.75;
            transform: rotateZ(0deg) scale(1.3);
            transition: margin 0.4s ease,
                        opacity 0.2s ease,
                        transform 0.15s cubic-bezier(0.1, 0.6, 0, 1);
        }
        svg {
            opacity: 0;
            transition: 0.6s cubic-bezier(0.6, 0, 0, 0.975);
            transition-property: width, height, padding, opacity;
        }
    }
}

*[thalia-gallery-filter-btn-id] {
    background-color: transparent;
    transform: translateY(0);
    transition: color 0.2s ease,
                background-color 0.2s ease,
                transform 0.3s cubic-bezier(0.3, 0, 0, 0.9);

    &:hover {
        background-color: rgba(var(--thalia-rgb-bg), 0.05);
        transform: translateY(-0.15em);
        transition: color 0.2s ease,
                    background-color 0.2s ease,
                    transform 0.2s cubic-bezier(0.1, 0.3, 0, 1);
    }
    &:active {
        background-color: rgba(var(--thalia-rgb-bg), 0.15);
        transform: translateY(0.1em) !important;
        transition: color 0.1s ease,
                    background-color 0.1s ease,
                    transform 0.04s ease;
    }

    &.active {
        color: var(--thalia-c-accent);
        background-color: var(--thalia-c-bg);

        &:hover {
            background-color: rgba(var(--thalia-rgb-bg), 0.8);
            transform: translateY(0em);
        }
    }
}






