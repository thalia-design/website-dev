@use 'utils' as *;

.project-layout {
    --media-height: 70vh;
    --margin-global: 1em;

    width: 100%;
    height: auto;

    .content-body {
        > *:not(:first-child):not([class*="space"]) {
            margin-top: var(--margin-global) !important;
        }
    }

    // small layout components
    .space {
        margin: 8em _;
    }

    *[class*="width-"] {
        height: auto;
        box-sizing: border-box;

        width: 100%;
        padding: 0;
        margin: _ auto;
    }
    .width- {
        &simple {
            width: 60%;
            max-width: 100rem;
        }
        &fill {
            padding: _ var(--margin-global);
        }
        &full {
            width: 100%;
        }

        @media (max-width: $size-square) {
            &simple {
                width: 80%;
            }
        }
        @media (max-width: $size-vertical) {
            &simple {
                width: 100%;
                max-width: 100%;
                padding: _ var(--margin-global);
            }
        }
    }

    img, video {
        display: block;
        width: auto;
        max-width: 100%;
        max-height: var(--media-height);
        object-fit: cover;
    }
    .video, .img {
        width: auto;
        height: auto;
        position: relative;
        pointer-events: all;
    }
    .video > video,
    .img > img {
        width: 100%;
        height: 100%;
        user-select: none;
        pointer-events: none;
    }

    p {
        text-wrap: initial;
        text-wrap: pretty;
    }
    .txt {
        @media (min-width: $size-square-min) {
            > * {
                padding: _ 6rem;
            }
        }
    }

    .images-line {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: var(--margin-global);

        > * {
            flex-grow: 1;
            flex-shrink: 1;
        }

        &:not(.keep-layout) {
            &,
            &.break-thin {
                flex-wrap: wrap;
            }
            & > * {
                min-width: 400px;
            }
            &.break-thin > * {
                min-width: 200px;
            }
        }

        &.flexible {
            > * {
                height: var(--media-height);
            }
        }
        &.interactive {
            > * {
                flex-grow: 1;
                transition: flex-grow 0.4s ease;
            }
            > *:hover {
                flex-grow: 3.5;
            }
        }
    }

    .images-column {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: var(--margin-global);

        > * {
            width: 100%;
            flex: 1;
        }
    }

    *[class*="images-grid-"] {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: var(--margin-global);
    }
    .images-grid-2 {
        grid-template-columns: 1fr 1fr;

        @media (min-width: $size-vertical-min) {
            &.flexible-last {
                > *:nth-last-child(2):nth-child(2n+2) + * {
                    grid-column: span 2;
                }
            }
        }
    }
    .images-grid-3 {
        grid-template-columns: 1fr 1fr 1fr;
    }
    .images-grid-4 {
        grid-template-columns: 1fr 1fr 1fr 1fr;
    }
    @media (max-width: $size-vertical) {
        *[class*="images-grid-"] {
            &:not(.keep-layout) {
                grid-template-columns: 1fr;
            }
        }
    }


    // specific
    *[thalia-p-section-name="project"] {
        @include dflex();

        > wrapper {
            width: auto;
        }
    }

    *[thalia-p-section-name="edito"] {
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        justify-content: flex-start;
        gap: 10rem;

        .desc {
            flex-grow: 1;
            flex-shrink: 1;
            text-wrap: balance;
        }

        .filters {
            flex-grow: 0;
            flex-shrink: 0;
            flex-wrap: wrap;

            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: flex-start;
            gap: 0.4em;
        }

        @media (max-width: $size-vertical) {
            flex-direction: column;
            gap: var(--margin-global);

            .filters {
                flex-direction: row;
            }
        }
    }
}


// LAYOUT COMPONENTS
*[data-carousel-infinite] {
    position: relative;
    width: 100%;
    height: calc(20vw + 35vh);
    min-height: 40rem;
    max-height: 70vh;

    --carousel-gap: var(--margin-global, 1em);
    --carousel-aspect-ratio: auto;

    touch-action: none;
    user-select: none;
    cursor: grab;
    &:active { cursor: grabbing; }

    & * { pointer-events: none !important; } // prevent bubbling

    > wrapper {
        position: absolute;
        top: 0;
        left: 0;
        padding: var(--carousel-gap) _;

        &,
        > wrapper {
            display: inline-flex;
            flex-direction: row;
            align-items: center;
            justify-content: flex-start;
            flex-shrink: 0;
            gap: 0;
            white-space: nowrap;

            width: auto;
            height: 100%;
        }

        > wrapper {
            > * {
                display: inline-block !important;
                position: relative !important;
                height: 100% !important;
                aspect-ratio: var(--carousel-aspect-ratio);
                padding-right: var(--carousel-gap);

                > * {
                    size: 100%;
                }
            }
        }
    }

    &.style-seamless {
        > wrapper {
            &,
            > wrapper {
                gap: 0;
            }
            > wrapper {
                > * {
                    padding-right: 0;
                }
            }

            * {
                border-radius: 0px;
            }
        }
    }
}
*[data-carousel-infinite="debug"] {
    > wrapper {
        > wrapper > * {
            &::after {
                z-index: 1;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                font-size: 8vw;
            }
            @for $i from 1 through 6 {
                &:nth-child(#{$i})::after {
                    content: "#{$i}";
                }
            }
        }
        > wrapper:nth-child(2) { color: #f00; }
        > wrapper:nth-child(3) { color: #0f0; }
    }
}
